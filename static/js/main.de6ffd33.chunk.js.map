{"version":3,"sources":["App.js","InputButtons.js","index.js"],"names":["buttons","App","handleInput","input","state","displayValue","operator","valueOne","valueTwo","nextValue","allowDot","setState","substr","length","dot","toString","slice","formatOperator","result","eval","toFixed","initialState","newValue","map","buttonRows","index","rowItem","buttonItems","buttonIndex","value","handleOnPress","bind","key","style","styles","rowInput","container","resultContainer","this","inputContainer","renderButtons","Component","StyleSheet","create","flex","justifyContent","backgroundColor","color","fontSize","fontWeight","padding","textAlign","flexDirection","InputButtons","props","onPress","text","margin","alignItems","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.de6ffd33.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport InputButtons from \"./InputButtons\";\n\nconst buttons = [\n  [\"AC\"],\n  [\"7\", \"8\", \"9\", \"/\"],\n  [\"4\", \"5\", \"6\", \"x\"],\n  [\"1\", \"2\", \"3\", \"-\"],\n  [\"0\", \".\", \"=\", \"+\"]\n];\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.initialState = {\n      displayValue: \"0\",\n      operator: null,\n      valueOne: \"\",\n      valueTwo: \"\",\n      nextValue: false,\n      allowDot: true,\n      newValue: false\n    };\n    this.state = this.initialState;\n  }\n\n  renderButtons() {\n    let layouts = buttons.map((buttonRows, index) => {\n      let rowItem = buttonRows.map((buttonItems, buttonIndex) => {\n        return (\n          <InputButtons\n            value={buttonItems}\n            handleOnPress={this.handleInput.bind(this, buttonItems)}\n            key={\"btn-\" + buttonIndex}\n          />\n        );\n      });\n      return (\n        <View style={styles.rowInput} key={\"row-\" + index}>\n          {rowItem}\n        </View>\n      );\n    });\n\n    return layouts;\n  }\n\n  handleInput = (input) => {\n    const {\n      displayValue,\n      operator,\n      valueOne,\n      valueTwo,\n      nextValue,\n      allowDot\n    } = this.state;\n\n    switch (input) {\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        this.setState({\n          displayValue: displayValue === \"0\" ? input : displayValue + input\n        });\n        if (!nextValue) {\n          this.setState({\n            valueOne: valueOne + input\n          });\n        } else {\n          this.setState({\n            valueTwo: valueTwo + input\n          });\n        }\n        break;\n      case \"+\":\n      case \"-\":\n      case \"x\":\n      case \"/\":\n        this.setState({\n          operator: input,\n          displayValue:\n            (operator !== null\n              ? displayValue.substr(0, displayValue.length - 1)\n              : displayValue) + input,\n          nextValue: true,\n          allowDot: true\n        });\n        break;\n      case \".\":\n        let dot = displayValue.toString().slice(-1);\n        this.setState({\n          displayValue:\n            dot !== \".\" && allowDot === true\n              ? displayValue + input\n              : displayValue\n        });\n        if (!nextValue) {\n          this.setState({\n            valueOne: valueOne + input\n          });\n        } else {\n          this.setState({\n            valueTwo: valueTwo + input\n          });\n        }\n        this.setState({\n          allowDot: false\n        });\n        break;\n      case \"=\":\n        let formatOperator = operator == \"x\" ? \"*\" : operator;\n        let result = eval(valueOne + formatOperator + valueTwo);\n        this.setState({\n          displayValue: result % 1 === 0 ? result : result.toFixed(2),\n          valueOne: result % 1 === 0 ? result : result.toFixed(2),\n          valueTwo: \"\",\n          operator: null,\n          nextValue: false\n        });\n        break;\n\n      case \"AC\":\n        this.setState(this.initialState);\n        this.setState({\n          allowDot: true\n        });\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.resultContainer}>\n          <Text style={styles.result}>{this.state.displayValue}</Text>\n        </View>\n        <View style={styles.inputContainer}>{this.renderButtons()}</View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  resultContainer: {\n    flex: 2,\n    justifyContent: \"center\",\n    backgroundColor: \"#008080\"\n  },\n  inputContainer: {\n    flex: 8,\n    backgroundColor: `#000080`\n  },\n  result: {\n    color: \"white\",\n    fontSize: 80,\n    fontWeight: \"bold\",\n    padding: 20,\n    textAlign: \"right\"\n  },\n  rowInput: {\n    flex: 1,\n    flexDirection: \"row\"\n  }\n});\n","import React, { Component } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, Text } from \"react-native\";\r\n\r\nexport default class InputButtons extends Component {\r\n  render() {\r\n    const { value, handleOnPress } = this.props;\r\n    return (\r\n      <TouchableOpacity\r\n        style={styles.container}\r\n        onPress={() => handleOnPress(value)}\r\n      >\r\n        <Text style={styles.text}>{value}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: 1,\r\n    backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n    fontSize: 26\r\n  }\r\n});\r\n","import { AppRegistry } from \"react-native\";\nimport App from \"./App\";\n\nAppRegistry.registerComponent(\"App\", () => App);\n\nAppRegistry.runApplication(\"App\", {\n  rootTag: document.getElementById(\"root\")\n});\n"],"sourceRoot":""}